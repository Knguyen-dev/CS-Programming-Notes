
# Use a node image
FROM node:15

# sets wroking directory in the container to '/app', so any commands we run will keep the working directory in mind, such as 
# copying files and whatnot; 
WORKDIR /app

# Copy our package.json into the working directory (/app) directory of the image; do package.json first for optimization.
# So now when the code layer of your image changes, you don't have to reinstall your dependencies.
COPY package.json . 


# Declare the arguments that we are going to use
ARG NODE_ENV

# If development, then install all dependencies
# Else if production, install only the production dependencies
RUN if [ "$NODE_ENV" = "development" ]; \
  then npm install; \
  else npm install --only=production; \
  fi 


# Copy all files from our current directory (our machine), and 
COPY . ./

# For 'PORT' environment variable; this is a default value if an environment variable for port isn't passed in via arguments when running the image
# Of course in our case, this is over-written as we use our own environment variables.
ENV PORT 4000
EXPOSE $PORT

# By default, we do node index.js, which would run your app in production; however in our .dev.yaml we can override this attribute.
CMD ["node", "index.js"]