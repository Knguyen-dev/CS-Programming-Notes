# Specify the version of docker compose; though you no longer need to do this
# version: "3.8"

# Specify 'services', which are projects that we want images for
# So you'd have a service that specifies how to create and run image for your backend api

services:
  api:  
    # specify the path to the dockerfile for the service named 'api' (relative to where the docker-compose.yaml is) which is just our express server backend
    build: "./api"
    
    # Specify the name of the container
    container_name: "api_c"

    # Port mapping so it'll use port 4000 in the container, so we want to be able to 
    # communicate with the api on port 4000 of local host
    # This can be a list of things so each time is indented and 
    ports:
      - '4000:4000'
  
    # specify the volumes
    volumes:
      # copy our api directory to our app directory and mirror it
      - ./api:/app

      # Let docker manage the container's 'node_module' directory; as a result
      # changes to node_modules made on the host don't affect the node_modules in the container
      # Leave this as an absolute path as docker manages this one
      - /app/node_modules
  client:
    build: "./client"
    container_name: 'client_c'
    ports:
      - "3000:3000"
     
    # These just start the container in interactive mode; which is what we should do and it's the opposite of detached mode.
    # Essentially it's just saying that our react container won't automatically shut down.
    stdin_open: true
    tty: true


  

    
  

